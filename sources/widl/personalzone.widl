/**<p>Webinos Personal Zone API provides access to information about personal zone devices and applications </p>
* \name Webinos Personal Zone API
*
* This API encapsulates information PZP id, PZH id, Screen size, Input type, device type,
* It provides information specific about device to the developer.
* This information is intended to be used in the same personal zone and care should be to not disclose information to outside personal devices.
*
* \author Habib Virji &lt;habib.virji@samsung.com&gt;
* \author Simon Isenberg &lt;Simon.Isenberg@bmw.de&gt;
* \def-api-feature http://webinos.org/api/personalzone
* Identifies the static information about the personal zone
* \version 0.1
*/


/**
* \brief The interface defines information provided by the platform about a Personal Zone Proxy (PZP) 
* A PzpDetails object is returned by a PersonalZoneDataHandler, when the getPZPDetails and getConnectedPZHs is called.
*/
[NoInterfaceObject]
interface PzpDetails : PersonalZoneData {
	/**
	* \brief Attribute provides the unique ID of the device.
	*/		
	readonly attribute String     id;
	/**
	* \brief Attribute provides the name of the device, which has been given by the user.
	*/	
	readonly attribute String     name;
	/**
	* \brief Attribute denotes if the personal zone is on- or offline.
	*/	
	readonly attribute boolean    connected;
	/**
	* \brief Attribute provides the information about the primary personal zone hub (PZH), to which the Personal Zone Proxy is connected.
	*/	
	readonly attribute PzhDetails connpzh;
};


/**
* \brief Generic PersonalZoneData interface, which is used as a callback function for the PersonalZoneDataHandler
*/
[NoInterfaceObject] interface PersonalZoneData {};


/**
* \brief The PzhDetails provides information about the connected personal zone hub. A PzhDetails object is returned by the PersonalZoneDataHandler, when the getConnectedPZHs is called. 
*/
interface PzhDetails : PersonalZoneData {
	readonly attribute String  pzhid;
	readonly attribute String  userid;
	readonly attribute boolean connected;
	readonly attribute boolean ownzone;
	readonly attribute boolean trusted;
};

/**
* \brief Personal Zone API interface
* The interface provides the information about 
*/
[NoInterfaceObject] interface PersonalZoneInterface {
	/**
	* \brief Method allows to request the details of the PZP on which application is executed
	*/
	void getPZPDetails(PersonalZoneDataHandler handler, PziErrorCallback errorCB);
	/**
	* \brief Method allows to request the details of the connected personal zone hub
	*/
	void getConnectedPZHs(PersonalZoneDataHandler handler, PziErrorCallback errorCB);
	/**
	* \brief Method allows to request the details of the connected personal zone proxies
	*/
	void getConnectedPZPs(PersonalZoneDataHandler handler, PziErrorCallback errorCB);
	/**
	* \brief Method allows to request id of the current executed applications
	*/
	void getAppId(PersonalZoneDataHandler handler, PziErrorCallback errorCB);
};

/**
* \brief callback method to receive personal zone data in non-recurring and asynchronous way
*/
callback PersonalZoneDataHandler = void (PersonalZoneData data);

/**
* \brief Interface to enable logging
*/
[NoInterfaceObject]
interface PzpLogging : PersonalZoneLogging {
	attribute boolean enable;
	attribute string pzpid;
	attribute string appid;
	attribute string logdata;
};

/**
* \brief Interface to enable logging and fetch log
*/
[NoInterfaceObject] interface PersonalZoneLoggingInteface{
/**
* \brief Method allows to enable or disabling logging for particular zone
*/
void setLog(PersonalZoneLoggingHandler handler, PziErrorCallback errorCB);
/**
* \brief Method allows to request id of the current executed applications
*/
void fetchLog(PersonalZoneLoggingHandler handler, PziErrorCallback errorCB);
};

/**
* \brief callback method to receive logging information in non-recurring and asynchronous way
*/
callback PersonalZoneLoggingHandler = void (PersonalZoneLogging data);

/**
* \brief callback method to receive logging information in non-recurring and asynchronous way
*/
[NoInterfaceObject] interface PersonaZone {
	readonly attribute PersonalZoneInterface        zone;
	readonly attribute PersonalZoneLoggingInterface logging;
};


/**
	* \brief callback for a failure from get* Methods
	* \param error a <a href="http://dvcs.w3.org/hg/domcore/raw-file/default/Overview.html#error-types-table">DOMError</a> containing information about the error (e.g. SecurityError if permission is denied).
	*
	*/
	callback PziErrorCallback = void (DOMError error);


Webinos implements PersonalZone;


